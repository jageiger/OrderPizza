<% @ca = s_mod %>

	<% @cart_item = CartItem.find(@ca.cart_item_id) %>
	
	<% options = AppliedModGroup.all.select{ |t| t.item_id == @cart_item.item_id } %>
<%# selected_mods = SelectedModifier.all.select{ |t| t.cart_item_id == @ca.cart_item_id }%>
	
		<% collection_of_left_mods = [] %>
		<% collection_of_right_mods = [] %>
		<% collection_of_left_options = [] %>
		<% collection_of_right_options = [] %>
		
		<% selected_mods = SelectedModifier.all.select{ |t| t.cart_item_id == @cart_item.id }%>
		
		<% options.each do |applied_mod_group| %>
			<%# This actually isn't very good. What about the possibility someone assigns multiple mod_groups with interface_position of one? Then I have overlapping columns, and multiple forms with the same ID. I need a COLUMN_MODS attribute on the CART_ITEM and look ip up that way. This is something I will have to do eventually. %>
			<% modifier_groups = ModifierGroup.all.select{ |t| t.id == applied_mod_group.modifier_group_id && t.interface_position == 1}%>

			<% modifier_groups.each do |modifier_group| %>
				<% if modifier_group.child %>
					<% grouped_modifiers = GroupedModifier.all.select{ |t| t.modifier_group_id == modifier_group.parent_modifier_group_id }%>
				<% else %>
					<% grouped_modifiers = GroupedModifier.all.select{ |t| t.modifier_group_id == modifier_group.id }%>
				<% end %>
				
				<% grouped_modifiers.each do |grouped_modifer| %>
					<% modifier = Modifier.find(grouped_modifer.modifier_id) %>
					
					<% unless ( modifier_group.prevent_incest && (SelectedModifier.all.select{ |t| t.cart_item_id == @cart_item.id && t.modifier_id == modifier.id}.any?) ) || (SelectedModifier.all.select{ |t| t.cart_item_id == @cart_item.id && t.modifier_id == modifier.id }.any?) %>
						<% if modifier.interface_column == 1 %>
							<% collection_of_left_options.push modifier %>
						<% elsif modifier.interface_column == 2 %>
							<% collection_of_right_options.push modifier %>
						<% end %>

						
					<% end %>
					<% if modifier.interface_column == 1 %>
						<% collection_of_left_mods.push modifier %>
					<% elsif modifier.interface_column == 2 %>
						<% collection_of_right_mods.push modifier %>
					<% end %>
				<% end %>
			
			
			<!-- draw stuff here? -->
			<% selected_mod = SelectedModifier.new %>
			<% tempName = modifier_group.name.tr(' ', '_').camelize %>
			<%= form_for(selected_mod, :remote => true, :html=>{:id=>"fancyForm", :style=>"" }, validate: true) do |g| %>
		
			<%= g.hidden_field :cart_item_id, :value => @cart_item.id %>
			<%= g.hidden_field :applied_mod_group_id, :value => modifier_group.id %>
			<%= g.hidden_field :modifier_id, :value => collection_of_left_mods.first.id, :id => "mod_field" %>
			
			<%= g.hidden_field :xpos, :value => 50, :id => "xpos_field" %>
			<%= g.hidden_field :ypos, :value => 10, :id => "ypos_field" %>
			<%= g.hidden_field :scrx, :value => 150, :id => "scrx_field" %>
			<%= g.hidden_field :scry, :value => 150, :id => "scry_field" %>
			<%= g.hidden_field :rapper, :value => 100, :id => "rapper_field" %>
			<%= g.submit nil, :class => 'btn btn-primary', :name => 'main', :style => 'display:none;' %>
			
			
			
			<%# Okay, so, %>
			<div style="clear:both;" id="cols">
				<div id="left-mods" style="float:left; overflow-y:scroll;height:400px; overflow-x: visible;margin-top: -10px;">
					<% collection_of_left_mods.each do |mod| %>
				
						<% if selected_mods.select{|t| t.modifier_id == mod.id }.empty? %>
						<a href="" data-remote="true" ><div id="mod-<%= mod.id %>" class="display" onclick="clicky(<%= mod.id %>);"><span class="panel-art"><%= image_tag(mod.file, alt: "Edit Entry", class: "panel-art panel-pic") %></span><%= mod.name %></div></a>
						<%# check to see if it exists in the collection of selected_mods, if it does, just change the class that it is to display it in a different color or something. %>
						
						<% else %>
						<% smod = selected_mods.select{|t| t.modifier_id == mod.id }.first %>
										<%= link_to selected_modifier_path(smod), method: :delete, remote: true do %>
									<div id="mod-<%= mod.id %>" class="display selected" onclick="deletey(<%= smod.id %>);"><span class="panel-art"><%= image_tag(mod.file, alt: "Edit Entry", class: "panel-art panel-pic") %></span><%= mod.name %></div>
								<% end %>
						<%# check to see if it exists in the collection of selected_mods, if it does, just change the class that it is to display it in a different color or something. %>
						<% end %>
						
					<% end %>
				</div>
			
				<div id="right-mods" style="float:right; overflow-y:scroll;height:400px; overflow-x: visible;margin-top: -10px;">
					<% collection_of_right_mods.each do |mod| %>
				
						<% if selected_mods.select{|t| t.modifier_id == mod.id }.empty? %>
						<a href="" data-remote="true" ><div id="mod-<%= mod.id %>" class="display" onclick="clicky(<%= mod.id %>);"><span class="panel-art"><%= image_tag(mod.file, alt: "Edit Entry", class: "panel-art panel-pic") %></span><%= mod.name %></div></a>
						<%# check to see if it exists in the collection of selected_mods, if it does, just change the class that it is to display it in a different color or something. %>
						
						<% else %>
						<% smod = selected_mods.select{|t| t.modifier_id == mod.id }.first %>
										<%= link_to selected_modifier_path(smod), method: :delete, remote: true do %>
									<div id="mod-<%= mod.id %>" class="display selected" onclick="deletey(<%= smod.id %>);"><span class="panel-art"><%= image_tag(mod.file, alt: "Edit Entry", class: "panel-art panel-pic") %></span><%= mod.name %></div>
								<% end %>
						<%# check to see if it exists in the collection of selected_mods, if it does, just change the class that it is to display it in a different color or something. %>
						<% end %>
						
					<% end %>
				</div>
			</div>
			
			
			<% end %>
			
			<% # end of first form ? %>
			
			
			
			
			<% selected_mod_drop = SelectedModifier.new %>
		<div id="drops" style=" position: relative; z-index:100;background-color:#FFFFFF;box-shadow: 0px 0px 5px 0px #888888;display: none;">
			
			
			<div style="padding:10px;">
				
				
				<a class="boxclose" id="boxclose" onclick="closeBruh();">dismiss</a>
			<%= form_for(selected_mod_drop, :remote => true, :html=>{:id=>"#aDropForm", :style=>"" }, validate: true) do |g| %>
			<b>Meats</b><br>
			  <% if(collection_of_left_options.any?) %>
	  			<%= g.hidden_field :authenticity_token, :value => form_authenticity_token %>
				<%= g.hidden_field :cart_item_id, :value => @cart_item.id %>
				<%= g.hidden_field :applied_mod_group_id, :value => modifier_group.id %>
				
				<%= g.hidden_field :xpos, :value => 50 %>
				<%= g.hidden_field :ypos, :value => 10 %>
				<%= g.hidden_field :scrx, :value => 150 %>
				<%= g.hidden_field :scry, :value => 150 %>
				<%= g.hidden_field :rapper, :value => 100 %>
				<div id="aError"></div>
					<%= g.submit nil, :class => 'btn btn-primary', :name => 'updateA', :style => 'display:none;' %>
				<%= g.select :modifier_id, options_from_collection_for_select(collection_of_left_options, 'id', 'name'), { :prompt => "Select Meats" }, :id => "#aSelect", onchange: " if ( $( '#aSelect' ).val()=='' )
	   { $('#aError').html('<p>Please do not try to select the placeholder.</p>');} else { $( this ).trigger('submit.rails'); $('#aError').html(''); }", class: "form-control" %>

	
				<% else %>
				
				<div id="aError"></div>

				<%= g.select :modifier_id, options_from_collection_for_select(collection_of_left_options, 'id', 'name'), { :prompt => "All Meats selected." }, :id => "#aSelect", :disabled => "disabled", onchange: " if ( $( '#aSelect' ).val()=='' )
	   { $('#aError').html('<p>Please do not try to select the placeholder.</p>'); } else { $( this ).trigger('submit.rails'); $('#aError').html(''); }", class: "form-control" %>

				<% end %>
				
			  
			
			<% end %>
			<% selected_mod_drop_two = SelectedModifier.new %>
			<%= form_for(selected_mod_drop_two, :remote => true, :html=>{:id=>"#bDropForm", :style=>"" }, validate: true) do |g| %>
			<b>Veggies</b><br>
			  <% if(collection_of_right_options.any?) %>
	  			
				<%= g.hidden_field :cart_item_id, :value => @cart_item.id %>
				<%= g.hidden_field :applied_mod_group_id, :value => modifier_group.id %>
				
				<%= g.hidden_field :xpos, :value => 50 %>
				<%= g.hidden_field :ypos, :value => 10 %>
				<%= g.hidden_field :scrx, :value => 150 %>
				<%= g.hidden_field :scry, :value => 150 %>
				<%= g.hidden_field :rapper, :value => 100 %>
				<div id="bError"></div>
				<%= g.submit nil, :class => 'btn btn-primary', :name => 'updateB', :style => 'display:none;' %>
				<%= g.select :modifier_id, options_from_collection_for_select(collection_of_right_options, 'id', 'name'), { :prompt => "Select Veggies" }, :id => "#bSelect", onchange: " if ( $( '#bSelect' ).val()=='' )
	   { $('#bError').html('<p>Please do not try to select the placeholder.</p>'); } else { $( this ).trigger('submit.rails'); $('#bError').html(''); }", class: "form-control" %>
	
				<% else %>
				
				<div id="aError"></div>

				<%= g.select :modifier_id, options_from_collection_for_select(collection_of_right_options, 'id', 'name'), { :prompt => "All Veggies selected." }, :id => "#bSelect", :disabled => "disabled", onchange: " if ( $( '#bSelect' ).val()=='' )
	   { $('#bError').html('<p>Please do not try to select the placeholder.</p>'); } else { $( this ).trigger('submit.rails'); $('#bError').html(''); }", class: "form-control" %>

				<% end %>
				
			  
			
			<% end %>
			</div></div>
			
			<% end %>
			
			
		<% end %>
	
		<%# selected modifiers, for each create a draggable %>
		
		<script> adjust(); </script>
		
