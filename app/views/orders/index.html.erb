<% if current_user.try(:admin?) %>

<h1>Listing orders</h1>

<table>
  <thead>
    <tr>
      <th>User</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @orders.each do |order| %>
      <tr>
        <td><%= order.user_id %></td>
        <td><%= link_to 'Show', order %></td>
        <td><%= link_to 'Edit', edit_order_path(order) %></td>
        <td><%= link_to 'Destroy', order, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Order', new_order_path %>

<% elsif user_signed_in? %>

<h1>Order</h1>

<table>
  <thead>
    <tr>
      <th>Item</th>
    </tr>
  </thead>

	<tbody> <%# Actually, I will be displaying the cart items on the orders path. Confusing, I know. I can easily implement a "Past Orders" method, that will look like how the index typically looks, except I'll exclude any current, open orders from being displayed. No delete, edit, or anything like that as options. Can create a 'new' order from one of these old ones. It allows for reordering. But that's not even on this page. %>
		<%# @orders = @orders.select{ |t| t.user_id == current_user.id && } %>
		
		<% @cart_items = CartItem.all.select{ |t| t.user_id == current_user.id && t.order_id == current_user.open_order }%>
	    <% @cart_items.each do |item| %>
	      <tr>
	        <td><%= Item.find(item.item_id).name %></td>
	      </tr>
	    <% end %>
	  </tbody>
	</table>

<% end %>